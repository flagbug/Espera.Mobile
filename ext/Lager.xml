<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Lager</name>
    </assembly>
    <members>
        <member name="M:Lager.SettingsStorage.#ctor(System.String,Akavache.IBlobCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Lager.SettingsStorage"/> class.
            </summary>
            <param name="keyPrefix">This value will be used as prefix for all settings keys.
            It should be reasonably unique, so that it doesn't collide with other keys in Akavache.</param>
            <param name="cache">An <see cref="T:Akavache.IBlobCache"/> implementation where you want your settings to be stored.</param>
        </member>
        <member name="M:Lager.SettingsStorage.GetOrCreate``1(``0,System.String)">
            <summary>
            Gets the value for the specified key, or, if the value doesn't exist, saves the <paramref name="defaultValue"/> and returns it.
            </summary>
            <typeparam name="T">The type of the value to get or create.</typeparam>
            <param name="defaultValue">The default value, if no value is saved yet.</param>
            <param name="key">The key of the setting. Automatically set through the <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/>.</param>
        </member>
        <member name="M:Lager.SettingsStorage.SetOrCreate``1(``0,System.String)">
            <summary>
            Overwrites the existing value or creates a new settings entry.
            The value is serialized via the Json.Net serializer.
            </summary>
            <typeparam name="T">The type of the value to set or create.</typeparam>
            <param name="value">The value to be set or created.</param>
            <param name="key">The key of the setting. Automatically set through the <see cref="T:System.Runtime.CompilerServices.CallerMemberNameAttribute"/>.</param>
        </member>
    </members>
</doc>
